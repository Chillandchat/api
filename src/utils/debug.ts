import fs from "fs";

let initialized: boolean = false;

/**
 * This function gets the current date and time.
 *
 * @returns {string} The current date and time.
 */

export const getDate = (): string => {
  const date: any = new Date();
  const currentDate: string = `${date.getDate()}/${
    date.getMonth() + 1
  }/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;

  return currentDate;
};

/**
 * This is the log function that will log out a message and write the message in the .apilog file.
 *
 * @param {string} content The content of the log.
 */

export const log = (content: string): void => {
  if (initialized) {
    const updatedContent = `[${getDate()}] ${content}`;

    console.log(updatedContent);
    fs.appendFileSync("./log/log.txt", updatedContent + "\n");
  } else {
    console.error("Debugger tool not initialized.");
  }
};

/**
 * This is the log function that will error log out a message and write the message in the .apilog file.
 *
 * @param {string} content The content of the error log.
 */

export const error = (content: string): void => {
  if (initialized) {
    const updatedContent = `ERROR: [${getDate()}] ${content}`;

    console.log(updatedContent);
    fs.appendFileSync("./log/log.txt", updatedContent + "\n");
  } else {
    console.error("Debugger tool not initialized.");
  }
};

/**
 * This is the intialize function that will initialize the log file.
 */

export const init = (): void => {
  if (!initialized) {
    console.log("Initializing debugger tools...");

    if (!fs.existsSync("./log")) {
      fs.mkdirSync("./log");
    }

    fs.writeFileSync(
      "./log/log.txt",
      `This is the Chill&chat api log file, please do not edit this file!\nLogs:\n`
    );

    initialized = true;
    initialized ? log("Debugger tools intialized.") : 0;
  } else {
    console.error("Debugger tool already initialized.");
  }
};

const debug: any = {
  log: log,
  error: error,
  init: init,
};

export default debug;
